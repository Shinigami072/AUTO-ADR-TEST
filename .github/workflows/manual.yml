# This is a basic workflow that is manually triggered

name: Create ADR

# Controls when the action will run. Workflow runs when manually triggered using the UI
# or API.
on:
  issues:
    types: [closed]
  repository_dispatch:
    types: [adr]
  workflow_dispatch:
    # Inputs the workflow accepts.
    inputs:
      name:
        # Friendly description to be shown in the UI instead of 'name'
        description: 'name of ADR'
        # Default value if no value is explicitly provided
        default: 'ADR-NAME'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      adr: 
        # Friendly description to be shown in the UI instead of 'name'
        description: 'NAME OF THE ADR'
        # Default value if no value is explicitly provided
        default: 'ADR-CONTENT'
        # Input has to be provided for the workflow to run
        required: true
        # The data type of the input
        type: string
      
    

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "greet"
  greet:
    permissions:
        contents: write
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Runs a single command using the runners shell
    - name: checkout
      uses: actions/checkout@v3
    - name: ADR EVENT
      if: ${{github.event_name == 'adr'}}
      env: 
        CONTENT: ${{toJSON(github.event)}}
      run: echo "$CONTENT"
    - name: ADR EVENT
      if: ${{github.event_name == 'issues'}}
      env: 
        CONTENT: ${{toJSON(github.event)}}
        TITLE: ${{github.event.issue.title}}
        BODY: ${{github.event.issue.body}}
        ID: ${{github.event.issue.number}}
        MSG: |
          ---
          updated_at: ${{github.event.issue.updated_at}}
          state: ${{github.event.issue.state}}
          state_reason: ${{github.event.issue.state_reason}}
          ---

          # ${{github.event.issue.number}} - [${{github.event.issue.title}}](${{github.event.issue.html_url}})

          ${{github.event.issue.body}}
      run: |
        echo "$CONTENT"
        export F_Id=`printf '%03d' "$ID"`
        export F_TITLE=`echo "$TITLE" | sed -e 's/\s\+/_/g' | tr '[:upper:]' '[:lower:]'`
        find adr -maxdepth 1 -regextype posix-egrep -regex "adr/{$F_Id}-.+\.md" -type f -delete
        rm -f "adr/$F_Id-*.md"
        echo "$MSG" > "adr/$F_Id-$F_TITLE.md"
        git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
        git config user.name "github-actions[bot]"
        git add adr
        git commit -m "chore(${{ github.workflow }}): Update ADR #$ID $TITLE" --trailer "ref=#$ID" || exit 0 #Nothing to commit -abort succesfully
        git push  
    - name: Send greeting
      if: ${{ github.event_name == 'workflow_dispatch' }}
      env: 
        CONTENT: ${{inputs.adr}}
      run: echo "Hello ${{ inputs.name }} $CONTENT"
